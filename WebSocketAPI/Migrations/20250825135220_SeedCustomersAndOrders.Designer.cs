// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebSocketAPI.Data;

#nullable disable

namespace WebSocketAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250825135220_SeedCustomersAndOrders")]
    partial class SeedCustomersAndOrders
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebSocketAPI.Models.Customer", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = "123",
                            Email = "alice@gmail.com",
                            Name = "Alice Johnson"
                        },
                        new
                        {
                            CustomerId = "456",
                            Email = "bob@gmail.com",
                            Name = "Bob Smith"
                        },
                        new
                        {
                            CustomerId = "789",
                            Email = "john@gmail.com",
                            Name = "John Dow"
                        });
                });

            modelBuilder.Entity("WebSocketAPI.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CustomerId = "123",
                            OrderDate = new DateTime(2025, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Completed",
                            TotalAmount = 100m
                        },
                        new
                        {
                            OrderId = 2,
                            CustomerId = "123",
                            OrderDate = new DateTime(2025, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Processing",
                            TotalAmount = 45m
                        },
                        new
                        {
                            OrderId = 3,
                            CustomerId = "456",
                            OrderDate = new DateTime(2025, 8, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Shipped",
                            TotalAmount = 78m
                        },
                        new
                        {
                            OrderId = 4,
                            CustomerId = "789",
                            OrderDate = new DateTime(2025, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Processing",
                            TotalAmount = 33m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
